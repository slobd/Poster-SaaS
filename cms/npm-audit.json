{
  "actions": [
    {
      "action": "review",
      "module": "node-forge",
      "resolves": [
        {
          "id": 1067323,
          "path": "strapi-admin>webpack-dev-server>selfsigned>node-forge",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067363,
          "path": "strapi-admin>webpack-dev-server>selfsigned>node-forge",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067364,
          "path": "strapi-admin>webpack-dev-server>selfsigned>node-forge",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067452,
          "path": "strapi-admin>webpack-dev-server>selfsigned>node-forge",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067471,
          "path": "strapi-admin>webpack-dev-server>selfsigned>node-forge",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067473,
          "path": "strapi-admin>webpack-dev-server>selfsigned>node-forge",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "glob-parent",
      "resolves": [
        {
          "id": 1067329,
          "path": "strapi-admin>webpack>watchpack>watchpack-chokidar2>chokidar>glob-parent",
          "dev": false,
          "optional": true,
          "bundled": false
        },
        {
          "id": 1067329,
          "path": "strapi-admin>webpack-dev-server>chokidar>glob-parent",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "strapi",
      "resolves": [
        {
          "id": 1067393,
          "path": "strapi",
          "dev": false,
          "bundled": false,
          "optional": false
        },
        {
          "id": 1070229,
          "path": "strapi",
          "dev": false,
          "bundled": false,
          "optional": false
        }
      ]
    },
    {
      "action": "review",
      "module": "immer",
      "resolves": [
        {
          "id": 1067715,
          "path": "strapi-admin>immer",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067720,
          "path": "strapi-admin>immer",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "tar",
      "resolves": [
        {
          "id": 1067729,
          "path": "strapi>strapi-generate-new>tar",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067732,
          "path": "strapi>strapi-generate-new>tar",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1067735,
          "path": "strapi>strapi-generate-new>tar",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "swagger-ui-dist",
      "resolves": [
        {
          "id": 1069994,
          "path": "strapi-plugin-documentation>swagger-ui-dist",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1070041,
          "path": "strapi-plugin-documentation>swagger-ui-dist",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    },
    {
      "action": "review",
      "module": "node-fetch",
      "resolves": [
        {
          "id": 1070022,
          "path": "strapi>node-fetch",
          "dev": false,
          "optional": false,
          "bundled": false
        },
        {
          "id": 1070022,
          "path": "strapi-plugin-upload>node-fetch",
          "dev": false,
          "optional": false,
          "bundled": false
        }
      ]
    }
  ],
  "advisories": {
    "1067323": {
      "findings": [
        {
          "version": "0.10.0",
          "paths": [
            "strapi-admin>webpack-dev-server>selfsigned>node-forge"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<1.3.0",
      "module_name": "node-forge",
      "severity": "high",
      "github_advisory_id": "GHSA-x4jg-mjrx-434g",
      "cves": [
        "CVE-2022-24772"
      ],
      "access": "public",
      "patched_versions": ">=1.3.0",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
      },
      "updated": "2022-03-30T20:07:57.000Z",
      "recommendation": "Upgrade to version 1.3.0 or later",
      "cwe": [
        "CWE-347"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067323,
      "references": "- https://github.com/digitalbazaar/forge/security/advisories/GHSA-x4jg-mjrx-434g\n- https://nvd.nist.gov/vuln/detail/CVE-2022-24772\n- https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1\n- https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2\n- https://github.com/advisories/GHSA-x4jg-mjrx-434g",
      "created": "2022-03-18T23:10:28.000Z",
      "reported_by": null,
      "title": "Improper Verification of Cryptographic Signature in node-forge",
      "npm_advisory_id": null,
      "overview": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
      "url": "https://github.com/advisories/GHSA-x4jg-mjrx-434g"
    },
    "1067329": {
      "findings": [
        {
          "version": "3.1.0",
          "paths": [
            "strapi-admin>webpack>watchpack>watchpack-chokidar2>chokidar>glob-parent"
          ]
        },
        {
          "version": "3.1.0",
          "paths": [
            "strapi-admin>webpack-dev-server>chokidar>glob-parent"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<5.1.2",
      "module_name": "glob-parent",
      "severity": "high",
      "github_advisory_id": "GHSA-ww39-953v-wcq6",
      "cves": [
        "CVE-2020-28469"
      ],
      "access": "public",
      "patched_versions": ">=5.1.2",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "updated": "2022-03-30T21:18:41.000Z",
      "recommendation": "Upgrade to version 5.1.2 or later",
      "cwe": [
        "CWE-400"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067329,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2020-28469\n- https://github.com/gulpjs/glob-parent/pull/36\n- https://github.com/gulpjs/glob-parent/blob/6ce8d11f2f1ed8e80a9526b1dc8cf3aa71f43474/index.js%23L9\n- https://github.com/gulpjs/glob-parent/releases/tag/v5.1.2\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBES128-1059093\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1059092\n- https://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905\n- https://www.oracle.com/security-alerts/cpujan2022.html\n- https://github.com/advisories/GHSA-ww39-953v-wcq6",
      "created": "2021-06-07T21:56:34.000Z",
      "reported_by": null,
      "title": "Regular expression denial of service in glob-parent",
      "npm_advisory_id": null,
      "overview": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
      "url": "https://github.com/advisories/GHSA-ww39-953v-wcq6"
    },
    "1067363": {
      "findings": [
        {
          "version": "0.10.0",
          "paths": [
            "strapi-admin>webpack-dev-server>selfsigned>node-forge"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<1.3.0",
      "module_name": "node-forge",
      "severity": "moderate",
      "github_advisory_id": "GHSA-2r2c-g63r-vccr",
      "cves": [
        "CVE-2022-24773"
      ],
      "access": "public",
      "patched_versions": ">=1.3.0",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
      },
      "updated": "2022-03-22T19:33:03.000Z",
      "recommendation": "Upgrade to version 1.3.0 or later",
      "cwe": [
        "CWE-347"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067363,
      "references": "- https://github.com/digitalbazaar/forge/security/advisories/GHSA-2r2c-g63r-vccr\n- https://nvd.nist.gov/vuln/detail/CVE-2022-24773\n- https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1\n- https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2\n- https://github.com/advisories/GHSA-2r2c-g63r-vccr",
      "created": "2022-03-18T23:10:48.000Z",
      "reported_by": null,
      "title": "Improper Verification of Cryptographic Signature in `node-forge`",
      "npm_advisory_id": null,
      "overview": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code is not properly checking `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
      "url": "https://github.com/advisories/GHSA-2r2c-g63r-vccr"
    },
    "1067364": {
      "findings": [
        {
          "version": "0.10.0",
          "paths": [
            "strapi-admin>webpack-dev-server>selfsigned>node-forge"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<1.3.0",
      "module_name": "node-forge",
      "severity": "high",
      "github_advisory_id": "GHSA-cfm4-qjh2-4765",
      "cves": [
        "CVE-2022-24771"
      ],
      "access": "public",
      "patched_versions": ">=1.3.0",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
      },
      "updated": "2022-03-22T19:33:47.000Z",
      "recommendation": "Upgrade to version 1.3.0 or later",
      "cwe": [
        "CWE-347"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067364,
      "references": "- https://github.com/digitalbazaar/forge/security/advisories/GHSA-cfm4-qjh2-4765\n- https://nvd.nist.gov/vuln/detail/CVE-2022-24771\n- https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1\n- https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2\n- https://github.com/advisories/GHSA-cfm4-qjh2-4765",
      "created": "2022-03-18T23:09:54.000Z",
      "reported_by": null,
      "title": "Improper Verification of Cryptographic Signature in node-forge",
      "npm_advisory_id": null,
      "overview": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
      "url": "https://github.com/advisories/GHSA-cfm4-qjh2-4765"
    },
    "1067393": {
      "findings": [
        {
          "version": "3.6.8",
          "paths": [
            "strapi"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<4.1.0",
      "module_name": "strapi",
      "severity": "moderate",
      "github_advisory_id": "GHSA-xrjf-phvv-r4vr",
      "cves": [
        "CVE-2022-0764"
      ],
      "access": "public",
      "patched_versions": ">=4.1.0",
      "cvss": {
        "score": 6.1,
        "vectorString": "CVSS:3.0/AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:L"
      },
      "updated": "2022-03-09T20:26:22.000Z",
      "recommendation": "Upgrade to version 4.1.0 or later",
      "cwe": [
        "CWE-77",
        "CWE-78"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067393,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2022-0764\n- https://github.com/strapi/strapi/commit/2a3f5e988be6a2c7dae5ac22b9e86d579b462f4c\n- https://huntr.dev/bounties/001d1c29-805a-4035-93bb-71a0e81da3e5\n- https://github.com/strapi/strapi/blob/master/packages/generators/app/lib/utils/fetch-npm-template.js#L13\n- https://www.github.com/strapi/strapi/commit/2a3f5e988be6a2c7dae5ac22b9e86d579b462f4c\n- https://github.com/advisories/GHSA-xrjf-phvv-r4vr",
      "created": "2022-02-27T00:00:15.000Z",
      "reported_by": null,
      "title": "Command injection in strapi",
      "npm_advisory_id": null,
      "overview": "When creating a strapi app using npxcreate-strapi-app, we can inject arbitrary commands through the template cli argument as per the code in this particular [link](https://github.com/strapi/strapi/blob/master/packages/generators/app/lib/utils/fetch-npm-template.js#L13), this happens due to improper sanitization of user input.",
      "url": "https://github.com/advisories/GHSA-xrjf-phvv-r4vr"
    },
    "1067452": {
      "findings": [
        {
          "version": "0.10.0",
          "paths": [
            "strapi-admin>webpack-dev-server>selfsigned>node-forge"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<1.0.0",
      "module_name": "node-forge",
      "severity": "moderate",
      "github_advisory_id": "GHSA-8fr3-hfg3-gpgp",
      "cves": [
        "CVE-2022-0122"
      ],
      "access": "public",
      "patched_versions": ">=1.0.0",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "updated": "2022-01-21T23:36:19.000Z",
      "recommendation": "Upgrade to version 1.0.0 or later",
      "cwe": [
        "CWE-601"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067452,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2022-0122\n- https://github.com/digitalbazaar/forge/commit/db8016c805371e72b06d8e2edfe0ace0df934a5e\n- https://huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae\n- https://github.com/advisories/GHSA-8fr3-hfg3-gpgp",
      "created": "2022-01-21T23:36:19.000Z",
      "reported_by": null,
      "title": "Open Redirect in node-forge",
      "npm_advisory_id": null,
      "overview": "parseUrl functionality in node-forge mishandles certain uses of backslash such as https:/\\/\\/\\ and interprets the URI as a relative path. ",
      "url": "https://github.com/advisories/GHSA-8fr3-hfg3-gpgp"
    },
    "1067471": {
      "findings": [
        {
          "version": "0.10.0",
          "paths": [
            "strapi-admin>webpack-dev-server>selfsigned>node-forge"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<1.0.0",
      "module_name": "node-forge",
      "severity": "low",
      "github_advisory_id": "GHSA-5rrq-pxf6-6jx5",
      "cves": [],
      "access": "public",
      "patched_versions": ">=1.0.0",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "updated": "2022-01-08T00:22:42.000Z",
      "recommendation": "Upgrade to version 1.0.0 or later",
      "cwe": [
        "CWE-1321"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067471,
      "references": "- https://github.com/digitalbazaar/forge/security/advisories/GHSA-5rrq-pxf6-6jx5\n- https://github.com/advisories/GHSA-5rrq-pxf6-6jx5",
      "created": "2022-01-08T00:22:42.000Z",
      "reported_by": null,
      "title": "Prototype Pollution in node-forge debug API.",
      "npm_advisory_id": null,
      "overview": "### Impact\nThe `forge.debug` API had a potential prototype pollution issue if called with untrusted input. The API was only used for internal debug purposes in a safe way and never documented or advertised.  It is suspected that uses of this API, if any exist, would likely not have used untrusted inputs in a vulnerable way.\n\n### Patches\nThe `forge.debug` API and related functions were removed in 1.0.0.\n\n### Workarounds\nDon't use the `forge.debug` API directly or indirectly with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/1-npm-node-forge/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge).\n* Email us at support@digitalbazaar.com.",
      "url": "https://github.com/advisories/GHSA-5rrq-pxf6-6jx5"
    },
    "1067473": {
      "findings": [
        {
          "version": "0.10.0",
          "paths": [
            "strapi-admin>webpack-dev-server>selfsigned>node-forge"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<1.0.0",
      "module_name": "node-forge",
      "severity": "low",
      "github_advisory_id": "GHSA-gf8q-jrpm-jvxq",
      "cves": [],
      "access": "public",
      "patched_versions": ">=1.0.0",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "updated": "2022-01-08T00:22:02.000Z",
      "recommendation": "Upgrade to version 1.0.0 or later",
      "cwe": [],
      "found_by": null,
      "deleted": null,
      "id": 1067473,
      "references": "- https://github.com/digitalbazaar/forge/security/advisories/GHSA-gf8q-jrpm-jvxq\n- https://github.com/advisories/GHSA-gf8q-jrpm-jvxq",
      "created": "2022-01-08T00:22:02.000Z",
      "reported_by": null,
      "title": "URL parsing in node-forge could lead to undesired behavior.",
      "npm_advisory_id": null,
      "overview": "### Impact\nThe regex used for the `forge.util.parseUrl` API would not properly parse certain inputs resulting in a parsed data structure that could lead to undesired behavior.\n\n### Patches\n`forge.util.parseUrl` and other very old related URL APIs were removed in 1.0.0 in favor of letting applications use the more modern WHATWG URL Standard API.\n\n### Workarounds\nEnsure code does not directly or indirectly call `forge.util.parseUrl` with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at support@digitalbazaar.com\n",
      "url": "https://github.com/advisories/GHSA-gf8q-jrpm-jvxq"
    },
    "1067715": {
      "findings": [
        {
          "version": "8.0.4",
          "paths": [
            "strapi-admin>immer"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<9.0.6",
      "module_name": "immer",
      "severity": "high",
      "github_advisory_id": "GHSA-c36v-fmgq-m8hx",
      "cves": [
        "CVE-2021-3757"
      ],
      "access": "public",
      "patched_versions": ">=9.0.6",
      "cvss": {
        "score": 7.5,
        "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "updated": "2021-09-13T20:32:41.000Z",
      "recommendation": "Upgrade to version 9.0.6 or later",
      "cwe": [
        "CWE-915",
        "CWE-1321"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067715,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2021-3757\n- https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237\n- https://huntr.dev/bounties/23d38099-71cd-42ed-a77a-71e68094adfa\n- https://github.com/advisories/GHSA-c36v-fmgq-m8hx",
      "created": "2021-09-07T22:57:14.000Z",
      "reported_by": null,
      "title": "Prototype Pollution in immer",
      "npm_advisory_id": null,
      "overview": "immer is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
      "url": "https://github.com/advisories/GHSA-c36v-fmgq-m8hx"
    },
    "1067720": {
      "findings": [
        {
          "version": "8.0.4",
          "paths": [
            "strapi-admin>immer"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<9.0.6",
      "module_name": "immer",
      "severity": "critical",
      "github_advisory_id": "GHSA-33f9-j839-rf8h",
      "cves": [
        "CVE-2021-23436"
      ],
      "access": "public",
      "patched_versions": ">=9.0.6",
      "cvss": {
        "score": 9.8,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "updated": "2021-09-13T20:27:53.000Z",
      "recommendation": "Upgrade to version 9.0.6 or later",
      "cwe": [
        "CWE-843",
        "CWE-1321"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067720,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2021-23436\n- https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237\n- https://snyk.io/vuln/SNYK-JS-IMMER-1540542\n- https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1579266\n- https://github.com/advisories/GHSA-33f9-j839-rf8h",
      "created": "2021-09-02T17:17:37.000Z",
      "reported_by": null,
      "title": "Prototype Pollution in immer",
      "npm_advisory_id": null,
      "overview": "This affects the package immer before 9.0.6. A type confusion vulnerability can lead to a bypass of CVE-2020-28477 when the user-provided keys used in the path parameter are arrays. In particular, this bypass is possible because the condition (p === \"__proto__\" || p === \"constructor\") in applyPatches_ returns false if p is ['__proto__'] (or ['constructor']). The === operator (strict equality operator) returns false if the operands have different type.",
      "url": "https://github.com/advisories/GHSA-33f9-j839-rf8h"
    },
    "1067729": {
      "findings": [
        {
          "version": "6.1.4",
          "paths": [
            "strapi>strapi-generate-new>tar"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": ">=6.0.0 <6.1.9",
      "module_name": "tar",
      "severity": "high",
      "github_advisory_id": "GHSA-5955-9wpr-37jh",
      "cves": [
        "CVE-2021-37713"
      ],
      "access": "public",
      "patched_versions": ">=6.1.9",
      "cvss": {
        "score": 8.2,
        "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
      },
      "updated": "2022-03-11T20:18:40.000Z",
      "recommendation": "Upgrade to version 6.1.9 or later",
      "cwe": [
        "CWE-22"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067729,
      "references": "- https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh\n- https://www.npmjs.com/package/tar\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37713\n- https://www.oracle.com/security-alerts/cpuoct2021.html\n- https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\n- https://github.com/advisories/GHSA-5955-9wpr-37jh",
      "created": "2021-08-31T16:05:05.000Z",
      "reported_by": null,
      "title": "Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization",
      "npm_advisory_id": null,
      "overview": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n",
      "url": "https://github.com/advisories/GHSA-5955-9wpr-37jh"
    },
    "1067732": {
      "findings": [
        {
          "version": "6.1.4",
          "paths": [
            "strapi>strapi-generate-new>tar"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": ">=6.0.0 <6.1.9",
      "module_name": "tar",
      "severity": "high",
      "github_advisory_id": "GHSA-qq89-hq3f-393p",
      "cves": [
        "CVE-2021-37712"
      ],
      "access": "public",
      "patched_versions": ">=6.1.9",
      "cvss": {
        "score": 8.2,
        "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
      },
      "updated": "2022-03-11T20:16:55.000Z",
      "recommendation": "Upgrade to version 6.1.9 or later",
      "cwe": [
        "CWE-22",
        "CWE-59"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067732,
      "references": "- https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\n- https://www.npmjs.com/package/tar\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37712\n- https://www.oracle.com/security-alerts/cpuoct2021.html\n- https://www.debian.org/security/2021/dsa-5008\n- https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\n- https://github.com/advisories/GHSA-qq89-hq3f-393p",
      "created": "2021-08-31T16:05:17.000Z",
      "reported_by": null,
      "title": "Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links",
      "npm_advisory_id": null,
      "overview": "### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n",
      "url": "https://github.com/advisories/GHSA-qq89-hq3f-393p"
    },
    "1067735": {
      "findings": [
        {
          "version": "6.1.4",
          "paths": [
            "strapi>strapi-generate-new>tar"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": ">=6.0.0 <6.1.7",
      "module_name": "tar",
      "severity": "high",
      "github_advisory_id": "GHSA-9r2w-394v-53qc",
      "cves": [
        "CVE-2021-37701"
      ],
      "access": "public",
      "patched_versions": ">=6.1.7",
      "cvss": {
        "score": 8.2,
        "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
      },
      "updated": "2022-03-11T20:20:35.000Z",
      "recommendation": "Upgrade to version 6.1.7 or later",
      "cwe": [
        "CWE-22",
        "CWE-59"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1067735,
      "references": "- https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\n- https://www.npmjs.com/package/tar\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37701\n- https://www.oracle.com/security-alerts/cpuoct2021.html\n- https://www.debian.org/security/2021/dsa-5008\n- https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\n- https://github.com/advisories/GHSA-9r2w-394v-53qc",
      "created": "2021-08-31T16:05:27.000Z",
      "reported_by": null,
      "title": "Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links",
      "npm_advisory_id": null,
      "overview": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.",
      "url": "https://github.com/advisories/GHSA-9r2w-394v-53qc"
    },
    "1069994": {
      "findings": [
        {
          "version": "3.47.1",
          "paths": [
            "strapi-plugin-documentation>swagger-ui-dist"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<4.1.3",
      "module_name": "swagger-ui-dist",
      "severity": "moderate",
      "github_advisory_id": "GHSA-6c9x-mj3g-h47x",
      "cves": [
        "CVE-2021-46708"
      ],
      "access": "public",
      "patched_versions": ">=4.1.3",
      "cvss": {
        "score": 6.1,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
      },
      "updated": "2022-04-15T17:04:35.000Z",
      "recommendation": "Upgrade to version 4.1.3 or later",
      "cwe": [
        "CWE-1021"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1069994,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2021-46708\n- https://security.snyk.io/vuln/SNYK-JS-SWAGGERUIDIST-2314884\n- https://www.npmjs.com/package/swagger-ui-dist/v/4.1.3\n- https://security.netapp.com/advisory/ntap-20220407-0004/\n- https://github.com/advisories/GHSA-6c9x-mj3g-h47x",
      "created": "2022-03-12T00:00:36.000Z",
      "reported_by": null,
      "title": "Spoofing attack in swagger-ui-dist",
      "npm_advisory_id": null,
      "overview": "The swagger-ui-dist package before 4.1.3 for Node.js could allow a remote attacker to hijack the clicking action of the victim. By persuading a victim to visit a malicious Web site, a remote attacker could exploit this vulnerability to hijack the victim's click actions and possibly launch further attacks against the victim.",
      "url": "https://github.com/advisories/GHSA-6c9x-mj3g-h47x"
    },
    "1070022": {
      "findings": [
        {
          "version": "2.6.1",
          "paths": [
            "strapi>node-fetch"
          ]
        },
        {
          "version": "2.6.1",
          "paths": [
            "strapi-plugin-upload>node-fetch"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<2.6.7",
      "module_name": "node-fetch",
      "severity": "high",
      "github_advisory_id": "GHSA-r683-j2x4-v87g",
      "cves": [
        "CVE-2022-0235"
      ],
      "access": "public",
      "patched_versions": ">=2.6.7",
      "cvss": {
        "score": 8.8,
        "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
      },
      "updated": "2022-04-19T19:03:26.000Z",
      "recommendation": "Upgrade to version 2.6.7 or later",
      "cwe": [
        "CWE-173",
        "CWE-200",
        "CWE-601"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1070022,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2022-0235\n- https://github.com/node-fetch/node-fetch/commit/36e47e8a6406185921e4985dcbeff140d73eaa10\n- https://huntr.dev/bounties/d26ab655-38d6-48b3-be15-f9ad6b6ae6f7\n- https://github.com/node-fetch/node-fetch/pull/1453\n- https://github.com/node-fetch/node-fetch/commit/5c32f002fdd65b1c6a8f1e3620210813d45c7e60\n- https://github.com/advisories/GHSA-r683-j2x4-v87g",
      "created": "2022-01-21T23:55:52.000Z",
      "reported_by": null,
      "title": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
      "npm_advisory_id": null,
      "overview": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
      "url": "https://github.com/advisories/GHSA-r683-j2x4-v87g"
    },
    "1070041": {
      "findings": [
        {
          "version": "3.47.1",
          "paths": [
            "strapi-plugin-documentation>swagger-ui-dist"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<4.1.3",
      "module_name": "swagger-ui-dist",
      "severity": "moderate",
      "github_advisory_id": "GHSA-qrmm-w75w-3wpx",
      "cves": [],
      "access": "public",
      "patched_versions": ">=4.1.3",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "updated": "2022-04-19T19:03:17.000Z",
      "recommendation": "Upgrade to version 4.1.3 or later",
      "cwe": [
        "CWE-918"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1070041,
      "references": "- https://github.com/swagger-api/swagger-ui/security/advisories/GHSA-qrmm-w75w-3wpx\n- https://github.com/swagger-api/swagger-ui/issues/4872\n- https://github.com/swagger-api/swagger-ui/commit/01a3e55960f864a0acf6a8d06e5ddaf6776a7f76\n- https://github.com/advisories/GHSA-qrmm-w75w-3wpx",
      "created": "2021-12-09T19:08:38.000Z",
      "reported_by": null,
      "title": "Server side request forgery in SwaggerUI",
      "npm_advisory_id": null,
      "overview": "SwaggerUI supports displaying remote OpenAPI definitions through the `?url` parameter. This enables robust demonstration capabilities on sites like `petstore.swagger.io`, `editor.swagger.io`, and similar sites, where users often want to see what their OpenAPI definitions would look like rendered.\n\nHowever, this functionality may pose a risk for users who host their own SwaggerUI instances. In particular, including remote OpenAPI definitions opens a vector for phishing attacks by abusing the trusted names/domains of self-hosted instances.\n\nAn example scenario abusing this functionality could take the following form:\n- `https://example.com/api-docs` hosts a version of SwaggerUI with `?url=` query parameter enabled.\n- Users will trust the domain `https://example.com` and the contents of the OpenAPI definition.\n- A malicious actor may craft a similar OpenAPI definition and service that responds to the defined APIs at `https://evildomain`.\n- Users mistakenly click a phishing URL like `https://example.com/api-docs?url=https://evildomain/fakeapi.yaml` and enters sensitive data via the \"Try-it-out\" feature.\n\nWe do want to stress that this attack vector is limited to scenarios that actively trick users into divulging sensitive information. The ease of this is highly contextual and, therefore, the threat model may be different for individual users and organizations. It is *not* possible to perform non-interactive attacks (e.g., cross-site scripting or code injection) through this mechanism.\n\n### Resolution \nWe've made the decision to [disable query parameters (#4872)](https://github.com/swagger-api/swagger-ui/issues/4872) by default starting with SwaggerUI version `4.1.3`. Please update to this version when it becomes available (**ETA: 2021 December**). Users will still be able to be re-enable the options at their discretion. We'll continue to enable query parameters on the Swagger demo sites.\n\n### Workaround\nIf you host a version of SwaggerUI and wish to mitigate this issue immediately, you are encouraged to add the following custom plugin code:\n\n```js\nSwaggerUI({\n  //  ...other configuration options,\n  plugins: [function UrlParamDisablePlugin() {\n    return {\n      statePlugins: {\n        spec: {\n          wrapActions: {\n            // Remove the ?url parameter from loading an external OpenAPI definition.\n            updateUrl: (oriAction) => (payload) => {\n              const url = new URL(window.location.href)\n              if (url.searchParams.has('url')) {\n                url.searchParams.delete('url')\n                window.location.replace(url.toString())\n              }\n              return oriAction(payload)\n            }\n          }\n        }\n      }\n    }\n  }],\n})\n```\n\n### Future UX work\n\nThrough the exploration of this issue, it became apparent that users may not be aware to which web server the Try-it-out function will send requests. While this information is currently presented at the top of the page, understanding may improve by displaying it closer to the \"Execute\" button where requests are actually made. We'll be exploring these UX improvements over the coming months and welcome community input. Please create a Feature Request under the GitHub Issue tab to start a conversation with us and the community.\n\n## Reflected XSS attack\n\n \n\n**Warning** in versions <= 3.36.2, it is possible to combine the URL options (as mentioned above) with a vunerability in DOMPurify (https://www.cvedetails.com/cve/CVE-2020-26870/) to create a reflected XSS vector. If your version of Swagger UI is older than or equal to 3.36.2, we suggest you upgrade or implement the workaround as mentioned above.\n",
      "url": "https://github.com/advisories/GHSA-qrmm-w75w-3wpx"
    },
    "1070229": {
      "findings": [
        {
          "version": "3.6.8",
          "paths": [
            "strapi"
          ]
        }
      ],
      "metadata": null,
      "vulnerable_versions": "<=4.1.5",
      "module_name": "strapi",
      "severity": "critical",
      "github_advisory_id": "GHSA-9qgm-w87q-hx89",
      "cves": [
        "CVE-2022-27263"
      ],
      "access": "public",
      "patched_versions": "<0.0.0",
      "cvss": {
        "score": 9.8,
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "updated": "2022-04-22T21:03:45.000Z",
      "recommendation": "None",
      "cwe": [
        "CWE-434"
      ],
      "found_by": null,
      "deleted": null,
      "id": 1070229,
      "references": "- https://nvd.nist.gov/vuln/detail/CVE-2022-27263\n- https://www.youtube.com/watch?v=LEeabouqRrg\n- https://github.com/advisories/GHSA-9qgm-w87q-hx89",
      "created": "2022-04-13T00:00:25.000Z",
      "reported_by": null,
      "title": "Unrestricted Upload of File with Dangerous Type in Strapi",
      "npm_advisory_id": null,
      "overview": "An arbitrary file upload vulnerability in the file upload module of Strapi v4.1.5 allows attackers to execute arbitrary code via a crafted file.",
      "url": "https://github.com/advisories/GHSA-9qgm-w87q-hx89"
    }
  },
  "muted": [],
  "metadata": {
    "vulnerabilities": {
      "info": 0,
      "low": 2,
      "moderate": 5,
      "high": 10,
      "critical": 2
    },
    "dependencies": 1726,
    "devDependencies": 0,
    "optionalDependencies": 27,
    "totalDependencies": 1753
  },
  "runId": "f0982029-60e8-4b00-a13e-38f9c097736c"
}
